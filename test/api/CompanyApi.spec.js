/**
 * Intrinio API
 * Welcome to the Intrinio API! Through our Marketplace, we offer a wide selection of financial data feeds sourced by our own proprietary processes as well as from many data vendors. The primary application of the Intrinio API is for use in third-party applications and integrations or for end-users utilizing the Excel add-in and Google Sheets add-on. The Intrinio API uses HTTPS verbs and a RESTful endpoint structure, which makes it easy to request data from Intrinio. Responses are delivered in JSON format. If you need additional help in using the API, go to our home page (https://intrinio.com) and click on the chat icon in the lower right corner.
 *
 * OpenAPI spec version: 2.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.intrinio);
  }
}(this, function(expect, intrinio) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new intrinio.CompanyApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CompanyApi', function() {
    describe('filterCompanies', function() {
      it('should call filterCompanies successfully', function(done) {
        //uncomment below and update the code to test filterCompanies
        //instance.filterCompanies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('filterCompanyFundamentals', function() {
      it('should call filterCompanyFundamentals successfully', function(done) {
        //uncomment below and update the code to test filterCompanyFundamentals
        //instance.filterCompanyFundamentals(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllCompanies', function() {
      it('should call getAllCompanies successfully', function(done) {
        //uncomment below and update the code to test getAllCompanies
        //instance.getAllCompanies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllCompanyFilings', function() {
      it('should call getAllCompanyFilings successfully', function(done) {
        //uncomment below and update the code to test getAllCompanyFilings
        //instance.getAllCompanyFilings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllCompanyFundamentals', function() {
      it('should call getAllCompanyFundamentals successfully', function(done) {
        //uncomment below and update the code to test getAllCompanyFundamentals
        //instance.getAllCompanyFundamentals(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCompany', function() {
      it('should call getCompany successfully', function(done) {
        //uncomment below and update the code to test getCompany
        //instance.getCompany(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCompanyDataPointNumber', function() {
      it('should call getCompanyDataPointNumber successfully', function(done) {
        //uncomment below and update the code to test getCompanyDataPointNumber
        //instance.getCompanyDataPointNumber(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCompanyDataPointText', function() {
      it('should call getCompanyDataPointText successfully', function(done) {
        //uncomment below and update the code to test getCompanyDataPointText
        //instance.getCompanyDataPointText(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCompanyHistoricalData', function() {
      it('should call getCompanyHistoricalData successfully', function(done) {
        //uncomment below and update the code to test getCompanyHistoricalData
        //instance.getCompanyHistoricalData(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNews', function() {
      it('should call getNews successfully', function(done) {
        //uncomment below and update the code to test getNews
        //instance.getNews(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('lookupCompanyFundamental', function() {
      it('should call lookupCompanyFundamental successfully', function(done) {
        //uncomment below and update the code to test lookupCompanyFundamental
        //instance.lookupCompanyFundamental(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchCompanies', function() {
      it('should call searchCompanies successfully', function(done) {
        //uncomment below and update the code to test searchCompanies
        //instance.searchCompanies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
